{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","message","handleKeyPress","event","setState","key","document","addEventListener","this","prevState","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAe,CACbC,QAAS,2BAFb,EAqBEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,QAAQ,4BAAD,OAA8BE,EAAME,IAApC,QAtB3B,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,kBAN5C,gCASE,SAAmBO,GACjB,OAAID,KAAKR,MAAMC,UAAYQ,EAAUR,UAVzC,kCAiBE,WACEK,SAASI,oBAAoB,QAASF,KAAKN,kBAlB/C,oBAyBE,WACE,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAA6BH,KAAKR,MAAMC,gBA5BhD,GAAyBW,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.0b7f78e8.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  message: string;\n};\n\nexport class App extends React.Component {\n  state: State = {\n    message: 'Nothing was pressed yet',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleKeyPress);\n  }\n\n  componentDidUpdate(prevState: Readonly<State>): boolean {\n    if (this.state.message !== prevState.message) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress = (event: KeyboardEvent) => {\n    this.setState({ message: `The last pressed key is [${event.key}]` });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">{this.state.message}</p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}